package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

// FeatureFull feature full
// swagger:model FeatureFull
type FeatureFull struct {

	// List of dependencies for this feature
	Dependencies []*Feature `json:"dependencies"`

	// description of the feature
	Description string `json:"description,omitempty"`

	// Docker file part to be used with that feature.
	DockerData string `json:"docker_data,omitempty"`

	// Unique identifier representing a specific feature.
	Name string `json:"name,omitempty"`

	// how to test that feature is working
	TestInstruction string `json:"test_instruction,omitempty"`
}

// Validate validates this feature full
func (m *FeatureFull) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDependencies(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *FeatureFull) validateDependencies(formats strfmt.Registry) error {

	if swag.IsZero(m.Dependencies) { // not required
		return nil
	}

	for i := 0; i < len(m.Dependencies); i++ {

		if swag.IsZero(m.Dependencies[i]) { // not required
			continue
		}

		if m.Dependencies[i] != nil {

			if err := m.Dependencies[i].Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}
