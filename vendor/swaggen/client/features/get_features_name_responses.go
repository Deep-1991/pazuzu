package features

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"swaggen/models"
)

// GetFeaturesNameReader is a Reader for the GetFeaturesName structure.
type GetFeaturesNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFeaturesNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetFeaturesNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetFeaturesNameDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetFeaturesNameOK creates a GetFeaturesNameOK with default headers values
func NewGetFeaturesNameOK() *GetFeaturesNameOK {
	return &GetFeaturesNameOK{}
}

/*GetFeaturesNameOK handles this case with default header values.

A single feature.
*/
type GetFeaturesNameOK struct {
	Payload *models.Feature
}

func (o *GetFeaturesNameOK) Error() string {
	return fmt.Sprintf("[GET /features/{name}][%d] getFeaturesNameOK  %+v", 200, o.Payload)
}

func (o *GetFeaturesNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Feature)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFeaturesNameDefault creates a GetFeaturesNameDefault with default headers values
func NewGetFeaturesNameDefault(code int) *GetFeaturesNameDefault {
	return &GetFeaturesNameDefault{
		_statusCode: code,
	}
}

/*GetFeaturesNameDefault handles this case with default header values.

Unexpected error.
*/
type GetFeaturesNameDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get features name default response
func (o *GetFeaturesNameDefault) Code() int {
	return o._statusCode
}

func (o *GetFeaturesNameDefault) Error() string {
	return fmt.Sprintf("[GET /features/{name}][%d] GetFeaturesName default  %+v", o._statusCode, o.Payload)
}

func (o *GetFeaturesNameDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
