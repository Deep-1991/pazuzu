package features

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"swaggen/models"
)

// GetDependenciesReader is a Reader for the GetDependencies structure.
type GetDependenciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDependenciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDependenciesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetDependenciesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetDependenciesOK creates a GetDependenciesOK with default headers values
func NewGetDependenciesOK() *GetDependenciesOK {
	return &GetDependenciesOK{}
}

/*GetDependenciesOK handles this case with default header values.

A list of features.
*/
type GetDependenciesOK struct {
	Payload *models.DependenciesList
}

func (o *GetDependenciesOK) Error() string {
	return fmt.Sprintf("[GET /dependencies][%d] getDependenciesOK  %+v", 200, o.Payload)
}

func (o *GetDependenciesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DependenciesList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDependenciesDefault creates a GetDependenciesDefault with default headers values
func NewGetDependenciesDefault(code int) *GetDependenciesDefault {
	return &GetDependenciesDefault{
		_statusCode: code,
	}
}

/*GetDependenciesDefault handles this case with default header values.

Unexpected error.
*/
type GetDependenciesDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get dependencies default response
func (o *GetDependenciesDefault) Code() int {
	return o._statusCode
}

func (o *GetDependenciesDefault) Error() string {
	return fmt.Sprintf("[GET /dependencies][%d] GetDependencies default  %+v", o._statusCode, o.Payload)
}

func (o *GetDependenciesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
