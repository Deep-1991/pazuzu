package files

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"swaggen/models"
)

// GetAPIFeaturesIDFilesReader is a Reader for the GetAPIFeaturesIDFiles structure.
type GetAPIFeaturesIDFilesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIFeaturesIDFilesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetAPIFeaturesIDFilesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetAPIFeaturesIDFilesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewGetAPIFeaturesIDFilesOK creates a GetAPIFeaturesIDFilesOK with default headers values
func NewGetAPIFeaturesIDFilesOK() *GetAPIFeaturesIDFilesOK {
	return &GetAPIFeaturesIDFilesOK{}
}

/*GetAPIFeaturesIDFilesOK handles this case with default header values.

OK
*/
type GetAPIFeaturesIDFilesOK struct {
	Payload []*models.File
}

func (o *GetAPIFeaturesIDFilesOK) Error() string {
	return fmt.Sprintf("[GET /api/features/{id}/files][%d] getApiFeaturesIdFilesOK  %+v", 200, o.Payload)
}

func (o *GetAPIFeaturesIDFilesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIFeaturesIDFilesDefault creates a GetAPIFeaturesIDFilesDefault with default headers values
func NewGetAPIFeaturesIDFilesDefault(code int) *GetAPIFeaturesIDFilesDefault {
	return &GetAPIFeaturesIDFilesDefault{
		_statusCode: code,
	}
}

/*GetAPIFeaturesIDFilesDefault handles this case with default header values.

Request can not be fulfilled
*/
type GetAPIFeaturesIDFilesDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get API features ID files default response
func (o *GetAPIFeaturesIDFilesDefault) Code() int {
	return o._statusCode
}

func (o *GetAPIFeaturesIDFilesDefault) Error() string {
	return fmt.Sprintf("[GET /api/features/{id}/files][%d] GetAPIFeaturesIDFiles default  %+v", o._statusCode, o.Payload)
}

func (o *GetAPIFeaturesIDFilesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
