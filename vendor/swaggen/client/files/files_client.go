package files

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new files API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for files API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GetAPIFeaturesIDFiles gets list of files linked used in this feature
*/
func (a *Client) GetAPIFeaturesIDFiles(params *GetAPIFeaturesIDFilesParams) (*GetAPIFeaturesIDFilesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPIFeaturesIDFilesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPIFeaturesIDFiles",
		Method:             "GET",
		PathPattern:        "/api/features/{id}/files",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPIFeaturesIDFilesReader{formats: a.formats},
		Context:            params.Context,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetAPIFeaturesIDFilesOK), nil

}

/*
GetAPIFilesID gets description of this file
*/
func (a *Client) GetAPIFilesID(params *GetAPIFilesIDParams) (*GetAPIFilesIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPIFilesIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPIFilesID",
		Method:             "GET",
		PathPattern:        "/api/files/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPIFilesIDReader{formats: a.formats},
		Context:            params.Context,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetAPIFilesIDOK), nil

}

/*
GetAPIFilesIDContent gets content of the file
*/
func (a *Client) GetAPIFilesIDContent(params *GetAPIFilesIDContentParams, writer io.Writer) (*GetAPIFilesIDContentOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPIFilesIDContentParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPIFilesIDContent",
		Method:             "GET",
		PathPattern:        "/api/files/{id}/content",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPIFilesIDContentReader{formats: a.formats, writer: writer},
		Context:            params.Context,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetAPIFilesIDContentOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
